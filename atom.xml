<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://biteliang.github.io</id>
    <title>Gridea</title>
    <updated>2022-03-12T14:23:30.110Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://biteliang.github.io"/>
    <link rel="self" href="https://biteliang.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://biteliang.github.io/images/avatar.png</logo>
    <icon>https://biteliang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[scoop安装，第二版]]></title>
        <id>https://biteliang.github.io/post/scoop-an-zhuang-di-er-ban/</id>
        <link href="https://biteliang.github.io/post/scoop-an-zhuang-di-er-ban/">
        </link>
        <updated>2022-03-12T14:19:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="安装scoop环境">安装Scoop环境</h2>
<pre><code class="language-powershell"># 管理员权限打开PowerShell——检查PowerShell版本是否大于5.0
$psversiontable.psversion.major

# 更改PowerShell脚本执行策略——选择A【全是】
set-executionpolicy remotesigned -s cu

# 如果不想Scoop软件默认在C盘，改变安装路径
$env:SCOOP='D:\Scoop'
[environment]::setEnvironmentVariable('SCOOP',$env:SCOOP,'User')

# 执行安装命令，以下三个命令中选一个即可。
# 推荐第一个，走国内Gitee线路，速度稳定
iex (new-object net.webclient).downloadstring('https://gitee.com/RubyKids/scoop-cn/raw/master/install.ps1')
# iwr -useb get.scoop.sh | iex
# iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
</code></pre>
<h2 id="配置网络">配置网络</h2>
<pre><code class="language-powershell"># 在scoop中设置科学上网,注意自己替换地址和端口，例
scoop config proxy 127.0.0.1：7890
</code></pre>
<h2 id="安装基本软件">安装基本软件</h2>
<pre><code class="language-powershell"># 安装 7zip git
# 再aria2，提升下载速度，下载完成后默认启动
scoop install 7zip git aria2
# 若不喜欢，可使用命令取消aria2接管下载
scoop config aria2-enabled False
</code></pre>
<h2 id="增加bucket">增加Bucket</h2>
<pre><code class="language-powershell"># 增加Bucket
# 注 scoop bucket known 命令可以查看 scoop 默认仓库
scoop bucket add extras
# 国内软件库
scoop bucket add dorado https://github.com/h404bi/dorado
scoop bucket add apps https://gitee.com/kkzzhizhou/scoop-apps
</code></pre>
<h2 id="推荐软件">推荐软件</h2>
<pre><code class="language-powershell"># scoop-search
# 可以提高搜索速度
# 使用方法 scoop-search wechat
scoop install scoop-search
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[iperf3，测试群晖的内网传输速度]]></title>
        <id>https://biteliang.github.io/post/iperf3ce-shi-qun-hui-de-nei-wang-chuan-shu-su-du/</id>
        <link href="https://biteliang.github.io/post/iperf3ce-shi-qun-hui-de-nei-wang-chuan-shu-su-du/">
        </link>
        <updated>2022-02-15T11:02:42.000Z</updated>
        <content type="html"><![CDATA[<p>iperf/iperf3 是另外一个很好用的网络速度测试的工具。如果是在普通的 linux 服务器上，我们可以直接通过 apt/yum 包来直接安装后就能使用了。在群晖中我们依然使用 docker 来快速的安装。</p>
<p>群晖开启ssh后，Windows上用putty登录</p>
<pre><code class="language-python"># 输入用户名和密码后，切换到root账户
sudo -i
# 安装命令
docker pull networkstatic/iperf3:latest
# 配置环境命令并运行iperf3服务端。注意，如果您不熟悉Docker,在测试运行后，该命令将会销毁容器。
docker run  -it --rm --name=iperf3-server -p 5201:5201 networkstatic/iperf3 -s
</code></pre>
<p>在对应测试的内网机器上执行客户端命令即可获得测速结果</p>
<p>这里依然用Windows为例。Windows上使用Scoop安装iperf3，打开Windows PowerShell</p>
<pre><code class="language-python">scoop install iperf3
</code></pre>
<p>安装成功后，在Windows上打开命令行窗口（继续使用Windows PowerShell也是可以）</p>
<pre><code class="language-python"># ip地址替换为群晖的内网ip
iperf3 -c xx.xx.xx.xx
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scoop]]></title>
        <id>https://biteliang.github.io/post/scoop/</id>
        <link href="https://biteliang.github.io/post/scoop/">
        </link>
        <updated>2021-07-06T16:29:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="scoop">Scoop</h1>
<h2 id="安装环境">安装环境</h2>
<ol>
<li>
<p>管理员权限打开PowerShell——检查PowerShell版本是否大于5.0<br>
<code>$psversiontable.psversion.major</code></p>
</li>
<li>
<p>更改PowerShell脚本执行策略——选择A【全是】<br>
<code>set-executionpolicy remotesigned -s cu</code></p>
</li>
<li>
<p>如果不想Scoop软件默认在C盘，改变安装路径</p>
<pre><code class="language-html">$env:SCOOP='D:\Scoop'
[environment]::setEnvironmentVariable('SCOOP',$env:SCOOP,'User')
iwr -useb get.scoop.sh | iex
</code></pre>
</li>
<li>
<p>安装下载Scoop：（无法访问则科学上网）</p>
</li>
</ol>
<pre><code class="language-html">iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
</code></pre>
<h2 id="安装软件">安装软件</h2>
<pre><code class="language-HTML"># 扩展软件库
scoop bucket add extras
# 国内软件库
scoop bucket add dorado https://github.com/h404bi/dorado
</code></pre>
<ul>
<li>解压软件安装包需要先安装：7zip</li>
<li>管理员权限软件需要先安装：sudo</li>
<li>提高下载速度，需要先安装：aria2</li>
<li>取消aria2接管下载命令 <code>scoop config aria2-enabled False</code></li>
</ul>
<h2 id="常用软件">常用软件</h2>
<pre><code class="language-html">  7zip 19.00 [main]
  aria2 1.35.0-1 [main]
  ccleaner 5.82.8950 [extras]
  clash-for-windows 0.16.1 [dorado]
  copytranslator 9.1.0 [dorado]
  cpu-z 1.96.1 [extras]
  everything 1.4.1.1009 [extras]
  fastcopy 3.92 [extras]
  fluent-terminal-np 0.7.5.0 [nonportable]
  geekuninstaller 1.4.7.142 [extras]
  GOOGLECHROME 91.0.4472.101 [extras]
  honeyview 5.40 [extras]
  innounp 0.50 [main]
  keepass 2.48.1 [extras]
  lockhunter 3.4.2 [extras]
  mpv 0.33.0 [extras]
  neteasemusic 2.9.1.199099 [dorado]
  notepad3 5.20.722.1 [extras]
  qbittorrent 4.3.6 [extras]
  renamer 7.3 [extras]
  runany 5.7.5 [dorado]
  screentogif 2.32.1 [extras]
  snipaste 1.16.2 [extras]
  stairspeedtest-reborn 0.7.1 [dorado]
  sublime-text 4-4107 [extras]
  tcping 0.39 [dorado]
  telegram 2.8.4 [extras]
  typora 0.10.11 [extras]
  unlocker 1.9.0 [extras]
  v2ray 4.40.1 [main]
  v2rayn 4.19 [extras]
  wechat nightly-20200905 [dorado]
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个笔记软件——Joplin]]></title>
        <id>https://biteliang.github.io/post/yi-ge-bi-ji-ruan-jian-joplin/</id>
        <link href="https://biteliang.github.io/post/yi-ge-bi-ji-ruan-jian-joplin/">
        </link>
        <updated>2021-05-19T14:45:57.000Z</updated>
        <content type="html"><![CDATA[<h1 id="一个笔记软件joplin">一个笔记软件——Joplin</h1>
<p><a href="https://joplinapp.org/">Joplin官网</a></p>
<p>作为个人笔记软件体验不错</p>
<p>可以搭配坚果云Webdav服务</p>
<p>电脑上也可以打开Visual Studio Code作为第三方编辑器（当然也可以使用Typora）</p>
<p>甚至还支持自定义CSS</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/biteliang/Images/main/images/20210519224117.png" alt="效果图" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[两分钟将网易云的歌单导入Spotify]]></title>
        <id>https://biteliang.github.io/post/liang-fen-zhong-jiang-wang-yi-yun-de-ge-dan-dao-ru-spotify/</id>
        <link href="https://biteliang.github.io/post/liang-fen-zhong-jiang-wang-yi-yun-de-ge-dan-dao-ru-spotify/">
        </link>
        <updated>2021-04-13T19:00:17.000Z</updated>
        <content type="html"><![CDATA[<p>需要用到的两个网站</p>
<ul>
<li><a href="https://yyrcd.com/2018/11/14/n2s-zh/">https://yyrcd.com/2018/11/14/n2s-zh/</a></li>
<li><a href="https://www.spotlistr.com/">https://www.spotlistr.com/</a></li>
</ul>
<p>输入网易云的歌单后复制<br>
<img src="https://biteliang.github.io/post-images/1618340513685.png" alt="" loading="lazy"><br>
<img src="https://biteliang.github.io/post-images/1618340527076.png" alt="" loading="lazy"></p>
<p>然后去第二个网站里，先右上角登录你的Spotify账号。登录后选择第一个，把刚刚复制的文字歌单粘贴进去，再点击搜索，等待搜索完成后拉到最下面，输入歌单名字然后创建即可<br>
<img src="https://biteliang.github.io/post-images/1618340538607.png" alt="" loading="lazy"><br>
<img src="https://biteliang.github.io/post-images/1618340542973.png" alt="" loading="lazy"><br>
<img src="https://biteliang.github.io/post-images/1618340544922.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记录一次 IPv6 上网配置]]></title>
        <id>https://biteliang.github.io/post/ji-lu-yi-ci-ipv6-shang-wang-pei-zhi/</id>
        <link href="https://biteliang.github.io/post/ji-lu-yi-ci-ipv6-shang-wang-pei-zhi/">
        </link>
        <updated>2021-04-12T18:17:18.000Z</updated>
        <content type="html"><![CDATA[<p>OpenWrt 路由 IPv6 正确上网配置</p>
<p>前言<br>
最近发现 OpenWrt 对 IPv6 默认配置有点不和谐，客户机各种无法使用IPv6.<br>
看了几个群友遇到同类问题后，发现是默认配置惹的祸！！！</p>
<h2 id="删除-ipv6-ula-前缀">删除 IPv6 ULA 前缀</h2>
<p><strong>网络 ---&gt; 接口</strong></p>
<p>将里面的内容删除。</p>
<figure data-type="image" tabindex="1"><img src="https://biteliang.github.io/post-images/1618251486353.png" alt="" loading="lazy"></figure>
<h2 id="wan-接口配置">WAN 接口配置</h2>
<p><strong>网络 ---&gt; 接口 ---&gt; WAN ---&gt; 高级设置</strong></p>
<ol>
<li>不勾选 “使用内置的 IPv6 管理”</li>
<li>“Obtain IPv6-Address”设置为 自动。</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://biteliang.github.io/post-images/1618251499205.png" alt="" loading="lazy"></figure>
<h2 id="lan-接口设置">LAN 接口设置</h2>
<p><strong>网络 ---&gt; 接口 ---&gt; LAN ---&gt; 高级设置</strong></p>
<ol>
<li>不勾选 “使用内置的 IPv6 管理”</li>
<li>路由通告服务 设置为 “混合模式”</li>
<li>关闭 DHCPv6 服务</li>
<li>勾选 “总是通告默认路由”</li>
</ol>
<figure data-type="image" tabindex="3"><img src="https://biteliang.github.io/post-images/1618251508897.png" alt="" loading="lazy"></figure>
<h2 id="dhcpdns-服务器设置">DHCP/DNS 服务器设置</h2>
<p><strong>网络 ---&gt; DHCP/DNS ---&gt;  高级设置</strong></p>
<p>不勾选 “禁止解析 IPv6 DNS 记录”</p>
<figure data-type="image" tabindex="4"><img src="https://biteliang.github.io/post-images/1618251522104.png" alt="" loading="lazy"></figure>
<p>保存并重启</p>
<p><strong>以上设置完毕记得 保存并重启一次路由器！！！</strong></p>
<p><strong>以上设置完毕记得 保存并重启一次路由器！！！</strong></p>
<p><strong>以上设置完毕记得 保存并重启一次路由器！！！</strong></p>
<h2 id="测试-客户机-ipv6">测试 客户机 IPv6</h2>
<p>百度关键词： IPV6 测试 ，就能找到很多相关测试网站。</p>
<p><img src="https://biteliang.github.io/post-images/1618251529752.png" alt="" loading="lazy"><br>
<img src="https://biteliang.github.io/post-images/1618251536114.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何获取cookie]]></title>
        <id>https://biteliang.github.io/post/ru-he-huo-qu-cookie/</id>
        <link href="https://biteliang.github.io/post/ru-he-huo-qu-cookie/">
        </link>
        <updated>2021-04-12T16:34:33.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://biteliang.github.io/post-images/1618245290840.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【Lyricify】为Spotify提供“滚动”歌词！]]></title>
        <id>https://biteliang.github.io/post/lyricify-wei-spotify-ti-gong-gun-dong-ge-ci/</id>
        <link href="https://biteliang.github.io/post/lyricify-wei-spotify-ti-gong-gun-dong-ge-ci/">
        </link>
        <updated>2021-03-15T14:09:28.000Z</updated>
        <content type="html"><![CDATA[<p>我可以自信地说：Lyricify是Spotify的最佳工具！<br>
工具地址 <a href="https://www.52pojie.cn/thread-1256830-1-1.html">链接</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个自己玩过的戴森球种子分享]]></title>
        <id>https://biteliang.github.io/post/dai-sen-qiu-chong-zi-fen-xiang/</id>
        <link href="https://biteliang.github.io/post/dai-sen-qiu-chong-zi-fen-xiang/">
        </link>
        <updated>2021-03-11T17:36:10.000Z</updated>
        <content type="html"><![CDATA[<p>草原横躺自转初始 1号星 隔壁B星 中子星 黑洞潮汐锁定</p>
<p>天翼云盘 <a href="https://cloud.189.cn/t/a6JveiNBFzUf">https://cloud.189.cn/t/a6JveiNBFzUf</a> (访问码:2ubf)</p>
<p>无限资源版本 <a href="https://cloud.189.cn/t/fyuyMnqMzeY3">https://cloud.189.cn/t/fyuyMnqMzeY3</a> (访问码:j0ic)</p>
<figure data-type="image" tabindex="1"><img src="https://biteliang.github.io/post-images/1615484652874.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://biteliang.github.io/post-images/1615484659918.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记录一个有趣的自动签到脚本-CheckinBox]]></title>
        <id>https://biteliang.github.io/post/ji-lu-yi-ge-you-qu-de-zi-dong-qian-dao-jiao-ben-checkinbox/</id>
        <link href="https://biteliang.github.io/post/ji-lu-yi-ge-you-qu-de-zi-dong-qian-dao-jiao-ben-checkinbox/">
        </link>
        <updated>2021-03-06T21:59:03.000Z</updated>
        <content type="html"><![CDATA[<p>地址 <a href="https://github.com/mengshouer/CheckinBox">CheckinBox</a></p>
]]></content>
    </entry>
</feed>